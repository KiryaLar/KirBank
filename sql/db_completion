CREATE EXTENSION IF NOT EXISTS pgcrypto;

CREATE TABLE users (
                       id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
                       email TEXT NOT NULL UNIQUE,
                       username TEXT NOT NULL UNIQUE,
                       password_hash TEXT NOT NULL
);

CREATE TABLE accounts (
                          id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
                          user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
                          balance NUMERIC(15,2) NOT NULL DEFAULT 0
);

CREATE TABLE cards (
                       id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
                       account_id UUID NOT NULL REFERENCES accounts(id) ON DELETE CASCADE,
                       card_number_encrypted BYTEA NOT NULL,
                       expiry_encrypted BYTEA NOT NULL,
                       cvv_hash TEXT NOT NULL
);

CREATE TABLE transactions (
                              id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
                              from_account UUID REFERENCES accounts(id),
                              to_account UUID REFERENCES accounts(id),
                              amount NUMERIC(15,2) NOT NULL,
                              timestamp TIMESTAMPTZ NOT NULL DEFAULT NOW(),
                              hmac TEXT NOT NULL
);

CREATE TABLE credits (
                         id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
                         account_id UUID NOT NULL REFERENCES accounts(id),
                         amount NUMERIC(15,2) NOT NULL,
                         interest_rate NUMERIC(5,2) NOT NULL,
                         term_months INT NOT NULL,
                         start_date DATE NOT NULL
);

CREATE TABLE payment_schedules (
                                   id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
                                   credit_id UUID NOT NULL REFERENCES credits(id) ON DELETE CASCADE,
                                   due_date DATE NOT NULL,
                                   amount NUMERIC(15,2) NOT NULL,
                                   is_paid BOOLEAN NOT NULL DEFAULT FALSE,
                                   paid_date DATE,
                                   penalty NUMERIC(15,2) NOT NULL DEFAULT 0
);